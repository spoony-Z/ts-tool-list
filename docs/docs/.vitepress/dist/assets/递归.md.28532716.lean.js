import{_ as s,v as a,b as n,R as l}from"./chunks/framework.e5597f12.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"递归.md","filePath":"递归.md"}'),o={name:"递归.md"},p=l(`<h2 id="返回所有匹配到的节点数据" tabindex="-1">返回所有匹配到的节点数据 <a class="header-anchor" href="#返回所有匹配到的节点数据" aria-label="Permalink to &quot;返回所有匹配到的节点数据&quot;">​</a></h2><ul><li><p><strong>api：</strong> <strong>fileUrlType</strong></p></li><li><p>参数：</p><ul><li><code>list: Array</code> 递归的数组</li><li><code>childKey: String</code> 子集字段</li><li><code>key: String</code> 要匹配的字段名</li><li><code>val: String | Number</code> 要匹配字段所对应的值</li><li><code>list: String</code> 文件URL</li></ul></li><li><p>示例</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">getRecursiveMatch</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">ts-tool-list</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Recursion</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">getRecursiveMatch</span><span style="color:#666666;">(</span><span style="color:#BD976A;">url</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">getRecursiveMatch</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">ts-tool-list</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Recursion</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">getRecursiveMatch</span><span style="color:#999999;">(</span><span style="color:#B07D48;">url</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div>`,3),e=[p];function t(c,r,i,y,d,A){return a(),n("div",null,e)}const h=s(o,[["render",t]]);export{u as __pageData,h as default};
